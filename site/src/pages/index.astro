---
import Layout from "../layouts/Layout.astro";
import OrbLayer from "../components/OrbLayer.astro";

const count = 5;
---

<Layout title="CSS Tricks">
  <div class="layer-0">
    {
      (
        <OrbLayer orbs={count} layer={1}>
          <OrbLayer orbs={count} layer={2}>
            <OrbLayer orbs={count} layer={3}>
              <OrbLayer orbs={count} layer={4}></OrbLayer>
            </OrbLayer>
          </OrbLayer>
        </OrbLayer>
      )
    }
  </div>
</Layout>

<style lang="scss" is:global>
  $colour: rgb(51, 107, 180);

  $depth: 4;
  $count: 5;
  $increment: calc(360 / $count);

  div {
    aspect-ratio: 1;
    background-color: $colour;
    border-radius: 50%;
    position: absolute;
    display: grid;
    place-items: center;
  }

  .layer-0 {
    width: 4vh;
  }

  .layer-1 {
    width: 2vh;
  }

  .layer-2 {
    width: 1vh;
  }

  .layer-3 {
    width: 0.5vh;
  }

  .layer-4 {
    width: 0.25vh;
  }

  @mixin orbit($offset, $distance) {
    from {
      transform: rotate(#{$offset}deg) translateX(#{$distance}+ vh);
    }

    to {
      transform: rotate(calc(#{$offset}deg + 360deg))
        translateX(#{$distance}+ vh);
    }
  }

  @for $h from 1 through $depth {
    @for $i from 1 through $count {
      div.layer-#{$h}:nth-of-type(#{$i}) {
        animation: orbit-#{$h}-#{$i} #{($h * 4) * 3}s linear infinite;
      }

      @keyframes orbit-#{$h}-#{$i} {
        @include orbit(calc($increment * $i), calc((1 / $h) * 12));
      }
    }
  }
</style>
